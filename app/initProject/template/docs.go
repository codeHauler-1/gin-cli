package template

import "fmt"

var DocsTmp = `// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = ` + fmt.Sprintf("`%s`", `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "登录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "登录"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "Password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "账号",
                        "name": "Username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    }
}`) + `

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}`

var DocsSwaggerYaml = `info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 密码
        in: path
        name: Password
        required: true
        type: string
      - description: 账号
        in: path
        name: Username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: login
      tags:
      - 登录
swagger: "2.0"`

var DocsSwaggerJson = `info:
  contact: {}
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 密码
        in: path
        name: Password
        required: true
        type: string
      - description: 账号
        in: path
        name: Username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: login
      tags:
      - 登录
swagger: "2.0"`
